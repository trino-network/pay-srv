// Code generated by go-swagger; DO NOT EDIT.

package types

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetInvoiceResponse get invoice response
//
// swagger:model getInvoiceResponse
type GetInvoiceResponse struct {

	// 用户自定义元数据，base64
	// Example: e29c1B698F98BdFe6Ca4012dEE6FB350D73E40AE
	// Required: true
	// Max Length: 512
	// Min Length: 0
	Metadata *string `json:"metadata"`

	// status
	// Example: success
	// Required: true
	// Enum: [unpaid paid notified]
	Status *string `json:"status"`

	// txn hash
	// Example: 0xa477aae4aa81df7c7b108bcc65450c7fa36b77f671b2768759e6485acd10f507
	// Required: true
	TxnHash *string `json:"txn_hash"`
}

// Validate validates this get invoice response
func (m *GetInvoiceResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMetadata(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTxnHash(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetInvoiceResponse) validateMetadata(formats strfmt.Registry) error {

	if err := validate.Required("metadata", "body", m.Metadata); err != nil {
		return err
	}

	if err := validate.MinLength("metadata", "body", *m.Metadata, 0); err != nil {
		return err
	}

	if err := validate.MaxLength("metadata", "body", *m.Metadata, 512); err != nil {
		return err
	}

	return nil
}

var getInvoiceResponseTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["unpaid","paid","notified"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getInvoiceResponseTypeStatusPropEnum = append(getInvoiceResponseTypeStatusPropEnum, v)
	}
}

const (

	// GetInvoiceResponseStatusUnpaid captures enum value "unpaid"
	GetInvoiceResponseStatusUnpaid string = "unpaid"

	// GetInvoiceResponseStatusPaid captures enum value "paid"
	GetInvoiceResponseStatusPaid string = "paid"

	// GetInvoiceResponseStatusNotified captures enum value "notified"
	GetInvoiceResponseStatusNotified string = "notified"
)

// prop value enum
func (m *GetInvoiceResponse) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getInvoiceResponseTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *GetInvoiceResponse) validateStatus(formats strfmt.Registry) error {

	if err := validate.Required("status", "body", m.Status); err != nil {
		return err
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", *m.Status); err != nil {
		return err
	}

	return nil
}

func (m *GetInvoiceResponse) validateTxnHash(formats strfmt.Registry) error {

	if err := validate.Required("txn_hash", "body", m.TxnHash); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get invoice response based on context it is used
func (m *GetInvoiceResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GetInvoiceResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetInvoiceResponse) UnmarshalBinary(b []byte) error {
	var res GetInvoiceResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
