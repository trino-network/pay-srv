// Code generated by go-swagger; DO NOT EDIT.

package types

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetInvoicePaymentInfoResponse get invoice payment info response
//
// swagger:model getInvoicePaymentInfoResponse
type GetInvoicePaymentInfoResponse struct {

	// amount
	// Example: 234535435345
	// Required: true
	Amount *int64 `json:"amount"`

	// jump url
	// Example: http://xxx/order/xxx
	// Required: true
	JumpURL *string `json:"jump_url"`

	// network
	// Example: ethereum
	// Required: true
	// Enum: [ethereum bsc polygon solana near goerli]
	Network *string `json:"network"`

	// recipient
	// Example: 0xe29c1B698F98BdFe6Ca4012dEE6FB350D73E40AE
	// Required: true
	// Max Length: 256
	// Min Length: 1
	Recipient *string `json:"recipient"`

	// 标题，在支付页面显示
	// Example: 支付订单NO：23435435646
	// Required: true
	// Max Length: 256
	// Min Length: 1
	Title *string `json:"title"`
}

// Validate validates this get invoice payment info response
func (m *GetInvoicePaymentInfoResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAmount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateJumpURL(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNetwork(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRecipient(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTitle(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetInvoicePaymentInfoResponse) validateAmount(formats strfmt.Registry) error {

	if err := validate.Required("amount", "body", m.Amount); err != nil {
		return err
	}

	return nil
}

func (m *GetInvoicePaymentInfoResponse) validateJumpURL(formats strfmt.Registry) error {

	if err := validate.Required("jump_url", "body", m.JumpURL); err != nil {
		return err
	}

	return nil
}

var getInvoicePaymentInfoResponseTypeNetworkPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ethereum","bsc","polygon","solana","near","goerli"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getInvoicePaymentInfoResponseTypeNetworkPropEnum = append(getInvoicePaymentInfoResponseTypeNetworkPropEnum, v)
	}
}

const (

	// GetInvoicePaymentInfoResponseNetworkEthereum captures enum value "ethereum"
	GetInvoicePaymentInfoResponseNetworkEthereum string = "ethereum"

	// GetInvoicePaymentInfoResponseNetworkBsc captures enum value "bsc"
	GetInvoicePaymentInfoResponseNetworkBsc string = "bsc"

	// GetInvoicePaymentInfoResponseNetworkPolygon captures enum value "polygon"
	GetInvoicePaymentInfoResponseNetworkPolygon string = "polygon"

	// GetInvoicePaymentInfoResponseNetworkSolana captures enum value "solana"
	GetInvoicePaymentInfoResponseNetworkSolana string = "solana"

	// GetInvoicePaymentInfoResponseNetworkNear captures enum value "near"
	GetInvoicePaymentInfoResponseNetworkNear string = "near"

	// GetInvoicePaymentInfoResponseNetworkGoerli captures enum value "goerli"
	GetInvoicePaymentInfoResponseNetworkGoerli string = "goerli"
)

// prop value enum
func (m *GetInvoicePaymentInfoResponse) validateNetworkEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getInvoicePaymentInfoResponseTypeNetworkPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *GetInvoicePaymentInfoResponse) validateNetwork(formats strfmt.Registry) error {

	if err := validate.Required("network", "body", m.Network); err != nil {
		return err
	}

	// value enum
	if err := m.validateNetworkEnum("network", "body", *m.Network); err != nil {
		return err
	}

	return nil
}

func (m *GetInvoicePaymentInfoResponse) validateRecipient(formats strfmt.Registry) error {

	if err := validate.Required("recipient", "body", m.Recipient); err != nil {
		return err
	}

	if err := validate.MinLength("recipient", "body", *m.Recipient, 1); err != nil {
		return err
	}

	if err := validate.MaxLength("recipient", "body", *m.Recipient, 256); err != nil {
		return err
	}

	return nil
}

func (m *GetInvoicePaymentInfoResponse) validateTitle(formats strfmt.Registry) error {

	if err := validate.Required("title", "body", m.Title); err != nil {
		return err
	}

	if err := validate.MinLength("title", "body", *m.Title, 1); err != nil {
		return err
	}

	if err := validate.MaxLength("title", "body", *m.Title, 256); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get invoice payment info response based on context it is used
func (m *GetInvoicePaymentInfoResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GetInvoicePaymentInfoResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetInvoicePaymentInfoResponse) UnmarshalBinary(b []byte) error {
	var res GetInvoicePaymentInfoResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
